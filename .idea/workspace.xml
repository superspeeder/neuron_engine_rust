<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml">
      <package file="$PROJECT_DIR$/binaries/editor">
        <enabledFeature name="default" />
      </package>
      <package file="$PROJECT_DIR$/components/neuron_common">
        <enabledFeature name="default" />
      </package>
      <package file="$PROJECT_DIR$">
        <enabledFeature name="default" />
      </package>
      <package file="$PROJECT_DIR$/components/neuron_runtime">
        <enabledFeature name="default" />
      </package>
      <package file="$PROJECT_DIR$/components/neuron_script_api">
        <enabledFeature name="default" />
      </package>
      <package file="$PROJECT_DIR$/components/neuron_script_api_procmacro">
        <enabledFeature name="default" />
      </package>
      <package file="$PROJECT_DIR$/binaries/runner">
        <enabledFeature name="default" />
      </package>
      <package file="$PROJECT_DIR$/sample_plugin">
        <enabledFeature name="default" />
      </package>
    </cargoProject>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="091e9f11-df6e-4fe1-99b6-3fe18605f8f4" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/neuron_engine_rust.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Cargo.lock" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Cargo.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binaries/editor/Cargo.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binaries/editor/src/main.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binaries/runner/Cargo.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binaries/runner/src/main.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/neuron_common/Cargo.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/neuron_common/src/lib.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/neuron_common/src/plugin.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/neuron_runtime/Cargo.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/neuron_runtime/src/lib.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/neuron_runtime/src/runtime.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/neuron_script_api/Cargo.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/neuron_script_api/src/api.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/neuron_script_api/src/lib.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/neuron_script_api/src/plugin.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/neuron_script_api_procmacro/Cargo.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/neuron_script_api_procmacro/src/lib.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sample_plugin/Cargo.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sample_plugin/src/lib.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sample_run/manifest.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/configuration.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/mod.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/lib.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/os/mod.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/os/window.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/render/mod.rs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="RsBuildProfile:dev" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Rust File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="MwfYoZxw" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 2
}]]></component>
  <component name="ProjectId" id="2wN2uaEny2WreAQMiJzBW9uUB8B" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Cargo.Build Plugin.executor": "Run",
    "Cargo.Run runner.executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.rust.reset.selective.auto.import": "true",
    "git-widget-placeholder": "master",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "org.rust.cargo.project.model.PROJECT_DISCOVERY": "true",
    "org.rust.cargo.project.model.impl.CargoExternalSystemProjectAware.subscribe.first.balloon": "",
    "org.rust.first.attach.projects": "true",
    "settings.editor.selected.configurable": "language.rust.build.tool.cargo",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Cargo.Run runner">
    <configuration name="Build Plugin" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="build --package sample_plugin" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Run runner" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="buildProfileId" value="dev" />
      <option name="command" value="run --package runner --bin runner" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs>
        <env name="RUST_LOG" value="debug" />
        <env name="NEURON_TARGET_APP_MANIFEST" value="sample_run/manifest.toml" />
      </envs>
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
        <option name="RunConfigurationTask" enabled="true" run_configuration_name="Build Plugin" run_configuration_type="CargoCommandRunConfiguration" />
      </method>
    </configuration>
    <configuration default="true" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Cargo.Run runner" />
      <item itemvalue="Cargo.Build Plugin" />
    </list>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="091e9f11-df6e-4fe1-99b6-3fe18605f8f4" name="Changes" comment="" />
      <created>1745867933244</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1745867933244</updated>
      <workItem from="1745867934858" duration="20511000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>